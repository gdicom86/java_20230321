package studentManager;

import java.util.Scanner;

public class ProgramManager implements Program{
	//멤버변수 student class, count변수
	private Student[] std = new Student[5];
	private int stdCount; //등록한 학생 카운트
	@Override
	public void printStudent() {
		for(int i = 0; i < stdCount; i++) {
			std[i].stdPrint(); //학생정보만 출력
			//printStudentOne(std[i]); // 학생정보 + 수강정보
			System.out.println("--------------------");
		}
		
	}

	@Override
	public void insertStudent(Scanner scan) {
		// 1명의 학생정보 값을 입력받아 객체를 생성한 후 등록
		// 학번, 이름, 주민번호, 학부, 학과
		System.out.println("--학생정보 입력--");
		System.out.println("이름> ");
		String name = scan.next();
		System.out.println("학번> ");
		String sNum = scan.next();
		System.out.println("주민번호> ");
		String rNum = scan.next();
		System.out.println("학부> ");
		String faculty = scan.next();
		System.out.println("학과> ");
		String major = scan.next();
		System.out.println("------------------");
		//입력받은 값으로 객체를 생성
		Student s = new Student(sNum, name, rNum, faculty, major);
		
		//배열이 다 찼다면 더 큰 배열을 생성 후 배열복사
		if(stdCount == std.length) {
			Student[] tmp = new Student[std.length+5];
			System.arraycopy(std, 0, tmp, 0, std.length);
			std = tmp;
		}
		
		//배열 등록
		std[stdCount] = s;
		stdCount++; //인원증가(배열 번지 증가)
	}

	@Override
	public void searchStudent(Scanner scan) {
		//검색할 학생이름을 입력받아 배열에서 탐색후 있다면 
		//학생정보 + 수강정보 출력 => printStudentOne() 호출
		System.out.println("검색하실 이름을 입렵하세요: ");
		String searchName = scan.next();
		boolean s = true;
		for(int i = 0; i < stdCount; i++) {
			if(std[i].getStdName().equals(searchName)) {
				printStudentOne(std[i]);
				s = false;
			} 
		}
		if(s == true) {
			System.out.println("없음");
		}
		
		
	}

	@Override
	public void registerSubject(Scanner scan) {
		//수강 신청자 체크 그 학생의 이름을 입력받기
		System.out.println("수강 신청할 학생의 학번을 입력하세요: ");
		String stdNum = scan.next();
		int index = -1;
		//배열의 위치 체크
		for(int i = 0; i < stdCount; i++) {
			if(std[i].getStdNum().equals(stdNum)) {
				index = i;
			}
		}
		//학번이 없다면
		if(index == -1) {
			System.out.println("입력하신 학번이 존재하지 않습니다.");
		}
		//신청할 과목의 객체 생성(과목정보 입력받기)
		System.out.println("---과목 정보 입력---");
		System.out.println("과목 코드를 입력하세요: ");
		String subCode = scan.next();
		System.out.println("과목 이름을 입력하세요: ");
		String subName = scan.next();		
		Subject sub = new Subject(subCode, subName);
		//신청(신청메서드 호출)
		std[index].insertSubject(sub);
	}

	@Override
	public void deleteSubject(Scanner scan) {
		//수강철회
		//수강 신청자 체크 그 학생의 이름을 입력받기
		System.out.println("수강 신청할 학생의 학번을 입력하세요: ");
		String stdNum = scan.next();
		int index = -1;
		//배열의 위치 체크
		for(int i = 0; i < stdCount; i++) {
			if(std[i].getStdNum().equals(stdNum)) {
				index = i;
			}
		}
		//학번이 없다면
		if(index == -1) {
			System.out.println("입력하신 학번이 존재하지 않습니다.");
		}
		System.out.println("수강철회할 과목의 이름를 입력하세요: ");
		String delSub = scan.next();
		//deleteSubject(String subName)
		std[index].deleteSubject(delSub);
	}
	
	//1명의 학생정보 + 수강정보를 같이 출력하고 싶을 때
	public void printStudentOne(Student s) {
		System.out.println("---학생정보---");
		s.stdPrint();
		System.out.println("---수강정보---");
		s.subPrint();
	}

}
